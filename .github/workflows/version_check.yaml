name: Package Version Check

on:
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      filesChanged: ${{ steps.filter.outputs.files }}
    steps:
      - name: Check changed files
        uses: dorny/paths-filter@v2
        id: changedFiles
        with:
          filters: |
            files:
              - 'ui-src/**'
              - 'functions/**'

      - name: Skip version check
        if: steps.changedFiles.outputs.files == 'false'
        run: echo "Package version check is not required for these changes. Passing status check"

  versionCheck:
    needs: changes
    if: ${{ needs.changes.outputs.filesChanged == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get package json of current branch
        id: branchPackageJson
        run: |
          echo "branchPackageJson=$(cat package.json | tr -d "\n")" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Get package json of main
        id: mainPackageJson
        run: |
          echo "mainPackageJson=$(cat package.json | tr -d "\n")" >> $GITHUB_OUTPUT

      - name: Find versions
        id: versions
        run: |
          echo "branchPackageVersion=${{ fromJson(steps.branchPackageJson.outputs.branchPackageJson).version }}" >> $GITHUB_OUTPUT
          echo "mainPackageVersion=${{ fromJson(steps.mainPackageJson.outputs.mainPackageJson).version }}" >> $GITHUB_OUTPUT

      - name: Package version needs to be updated
        if: ${{ steps.versions.outputs.branchPackageVersion == steps.versions.outputs.mainPackageVersion}}
        run: exit 1

      - name: Package version is Updated
        run: echo "All Good"

  skipVersionCheck:
    needs: changes
    if: ${{ needs.changes.outputs.filesChanged == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Package version check is not required for these changes. Passing status check"
